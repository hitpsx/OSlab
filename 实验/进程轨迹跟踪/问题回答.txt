1.结合自己的体会，谈谈从程序设计者的角度看，单进程编程和多进程编程最大的区别是什么？

单进程编程较于多进程编程要更简单，因为单进程是顺序执行的，而多进程编程是同步执行的，所以情况要复杂得多。在设计多进程编程时，要考虑资源的分配，时间片的分配等达到系统调度的平衡。要综合考虑所有进程的情况以达到最优的并行执行效果。且多进程编程的功能更为强大，且应用范围较于单进程编程更加广泛。

2.你是如何修改时间片的？

仅针对样本程序建立的进程，在修改时间片前后，log文件的统计结果（不包括Graphic）都是什么样？
结合你的修改分析一下为什么会这样变化，或者为什么没变化？
1）include/sched.h宏INIT_TASK中定义的：
#define INIT_TASK \
     { 0,15,15, //分别对应state;counter;和priority;
 将priority值修改，即可实现对时间片大小的调整。
2）在修改时间片将priority由15改为150后：
Process 9~20 中Turnaround, Waiting, CPU Burst, I/O Burst变化不大
3）原因可能是程序中I/O操作占用的时间对于总时间影响的权重过大，导致处理时间体现的并不明显。
或者变化不大的原因是，子进程连续占用cpu的时间要比时间片大很多